<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://fadoherry.github.io</id>
    <title>Fadoherry</title>
    <updated>2023-10-27T07:20:01.790Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://fadoherry.github.io"/>
    <link rel="self" href="https://fadoherry.github.io/atom.xml"/>
    <subtitle>welcome to fadoherry`s blog</subtitle>
    <logo>https://fadoherry.github.io/images/avatar.png</logo>
    <icon>https://fadoherry.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Fadoherry</rights>
    <entry>
        <title type="html"><![CDATA[Linux 压缩操作]]></title>
        <id>https://fadoherry.github.io/linux-ya-suo-cao-zuo/</id>
        <link href="https://fadoherry.github.io/linux-ya-suo-cao-zuo/">
        </link>
        <updated>2023-10-27T07:06:12.000Z</updated>
        <content type="html"><![CDATA[<p>Linux 服务器，可以使用各种命令来压缩文件夹。以下是常用的几种方法：</p>
<p>使用 tar 命令压缩为 tar 格式：</p>
<p>使用 tar 命令可以将文件夹压缩为 tar 格式的归档文件，然后可以选择将其压缩为 gzip 或 bzip2 压缩格式。</p>
<h4 id="压缩为-tar-文件tar-cvf-archivetar-folder_to_compress">压缩为 .tar 文件：<code>tar -cvf archive.tar folder_to_compress</code></h4>
<h4 id="压缩为-targz-文件tar-czvf-archivetargz-folder_to_compress">压缩为 .tar.gz 文件：<code>tar -czvf archive.tar.gz folder_to_compress</code></h4>
<h4 id="压缩为-tarbz2-文件tar-cjvf-archivetarbz2-folder_to_compress">压缩为 .tar.bz2 文件：<code>tar -cjvf archive.tar.bz2 folder_to_compress</code></h4>
<p>使用 zip 命令压缩为 zip 格式：</p>
<p>使用 zip 命令可以将文件夹压缩为 zip 格式的压缩文件。</p>
<h4 id="压缩为-zip-文件zip-r-archivezip-folder_to_compress">压缩为 .zip 文件：<code>zip -r archive.zip folder_to_compress</code></h4>
<p>使用 7z 命令压缩为 7z 格式：</p>
<p>如果安装了 p7zip 包，你可以使用 7z 命令将文件夹压缩为 7z 格式的压缩文件。</p>
<h4 id="压缩为-7z-文件7z-a-archive7z-folder_to_compress">压缩为 .7z 文件：<code>7z a archive.7z folder_to_compress</code></h4>
<p>这些命令中的参数含义如下：</p>
<p>c：创建归档文件<br>
x：解压缩归档文件<br>
v：显示详细信息<br>
z：以 gzip 格式压缩<br>
j：以 bzip2 格式压缩<br>
r：递归压缩整个文件夹</p>
<p>例如，要将名为 my_folder 的文件夹压缩为 my_folder.tar.gz，可以执行以下命令：</p>
<h4 id="tar-czvf-my_foldertargz-my_folder"><code>tar -czvf my_folder.tar.gz my_folder</code></h4>
<p>请注意，压缩文件大小和压缩速度可能会因压缩算法和文件内容而有所不同。选择合适的压缩算法和格式取决于你的需求和服务器上已安装的工具。</p>
<p>vim 文件<br>
i进入编辑模式，编辑结束后按esc<br>
：wq保存修改并退出</p>
<h4 id="解压缩targz文件包tar-zxvf-my_foldertargz">解压缩tar.gz文件包：<code>tar -zxvf my_folder.tar.gz</code></h4>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux 相关操作命令]]></title>
        <id>https://fadoherry.github.io/linux-xiang-guan-cao-zuo-ming-ling/</id>
        <link href="https://fadoherry.github.io/linux-xiang-guan-cao-zuo-ming-ling/">
        </link>
        <updated>2023-10-27T06:50:12.000Z</updated>
        <content type="html"><![CDATA[<h3 id="xshell常用命令大全">xshell常用命令大全</h3>
<h4 id="1-ls命令列出文件">1、ls命令——列出文件</h4>
<p><code>ls -la</code> 给出当前目录下所有文件的一个长列表，包括以句点开头的“隐藏”文件<br>
<code>ls a*</code> 列出当前目录下以字母a开头的所有文件<br>
<code>ls -l *.doc</code> 给出当前目录下以。doc结尾的所有文件</p>
<h4 id="2-cp命令复制文件">2、cp命令——复制文件</h4>
<p><code>cp afile afile.bak</code>把文件复制为新文件afile.bak<br>
<code>cp afile /home/bible/</code> 把文件afile从当前目录复制到/home/bible/目录下<br>
<code>cp * /tmp</code> 把当前目录下的所有未隐藏文件复制到/tmp/目录下<br>
<code>cp -a docs docs.bak</code> 递归性地把当前目录下的docs目录复制为新目录docs.bak，保持文件属性，	并复制所有的文件，包括以句点开头的隐藏文件。为了方便起见，-a选项包含-R选项<br>
<code>cp -i</code> 在覆盖前询问用户<br>
<code>cp -v</code> 告诉用户正在做什么</p>
<h4 id="3-mv命令移动和重命名文件">3、mv命令——移动和重命名文件</h4>
<p><code>mv aflie bfile</code> 将afile重命名为bfile<br>
<code>mv afile /tmp</code> 把当前目录下的afile移动到/tmp/目录下</p>
<h4 id="4-rm命令删除文件和目录">4、rm命令——删除文件和目录</h4>
<p><code>rm afile</code> 删除文件afile<br>
<code>rm *</code> 删除当前目录下的所有文件（未隐藏文件）。rm命令不删除目录，除非也指定了-r（递归）参数。<br>
<code>rm -rf domed</code> 删除domed目录以及它所包含的所有内容<br>
<code>rm -i a*</code> 删除当前目录下所有以字母a开头的文件，并且在每次删除时，提示用户进行确认</p>
<h4 id="5-cd命令更改目录">5、cd命令——更改目录</h4>
<p><code>cd ~</code> 切换到主目录<br>
<code>cd /tmp</code> 切换到目录/tmp<br>
<code>cd dir</code> 切换到当前目录下的dir目录<br>
<code>cd /</code> 切换到根目录<br>
<code>cd</code> 或者<code>cd ..</code> 切换到到上一级目录<br>
<code>cd /</code> 切换到上二级目录<br>
<code>cd ~</code> 切换到用户目录，比如是root用户，则切换到/root下</p>
<h4 id="6-mkdir命令建立目录">6、mkdir命令——建立目录</h4>
<p><code>mkdir phots</code> 在当前目录中建立名为photos的目录<br>
<code>mkdir -p this/that/theother</code> 在当前目录下建立指定的嵌套子目录</p>
<h4 id="7-rmdir命令删除目录">7、rmdir命令——删除目录</h4>
<p><code>rmdir</code> 将删除空目录</p>
<h4 id="8-more-less命令查看文件内容">8、more、less命令——查看文件内容</h4>
<p><code>more /etc/passwd</code> 查看/etc/passwd的内容<br>
功能：分页显示命令<br>
<code>more file</code><br>
more命令也可以通过管道符（|）与其他的命令一起使用</p>
<h4 id="9-grep命令搜索文件内容">9、grep命令——搜索文件内容</h4>
<p><code>grep bible /etc/exports</code> 在文件exports中查找包含bible的所有行<br>
<code>tail -100 /var/log/apache/access.log|grep 404</code> 在WEB服务器日志文件access.log的后100行中查找包含“404”的行<br>
<code>tail -100 /var/log/apache/access.log|grep -v googlebot</code> 在WEB服务器日志文件access.log的后100行中，查找没有被google访问的行<br>
grep -v ^# /etc/apache2/httpd.conf 在主apache配置文件中，查找所有非注释行</p>
<h4 id="10-find命令查找文件">10、find命令——查找文件</h4>
<p><code>find .-name *.rpm</code> 在当前目录中查找rpm包<br>
<code>find .|grep page</code> 在当前目录及其子目录中查找文件名包含page的文件 locate traceroute 在系统的任何地方查找文件名包含traceroute的文件</p>
<h4 id="11-vi命令编辑文件">11、vi命令——编辑文件</h4>
<p><code>vi /etc/bubby.txt</code> 用vi编辑文件/etc/bubby.txt<br>
<code>vim /etc/bubby.txt</code> 用vi编辑文件/etc/bubby.txt</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Supervisor]]></title>
        <id>https://fadoherry.github.io/supervisor/</id>
        <link href="https://fadoherry.github.io/supervisor/">
        </link>
        <updated>2023-10-13T02:35:13.000Z</updated>
        <content type="html"><![CDATA[<p>🎓</p>
<ol>
<li>
<p>安装<br>
<code>apt-get install supervisor</code></p>
</li>
<li>
<p>生成配置文件<br>
<code> echo_supervisord_conf &gt; /etc/supervisord.conf</code></p>
</li>
<li>
<p>修改配置文件<br>
vim /etc/supervisord.conf<br>
进入后进入文件最尾部<br>
将include配置修改为<br>
[include]<br>
files = /mnt/hgfs/xxx/supervisor/*.ini<br>
注：此处/mnt/hgfs/xxx 为项目目录路径</p>
</li>
<li>
<p>修改项目目录下supervisor文件夹下的project.ini<br>
修改所有directory参数路径 为当前项目路径<br>
stderr_logfile、stdout_logfile参数路径 修改前面为项目路径</p>
</li>
<li>
<p>启动Supervisor<br>
<code> supervisord -c /etc/supervisord.conf</code></p>
</li>
<li>
<p>查看运行状态<br>
<code> supervisorctl status</code><br>
如果运行状态显示RUNNING则为正常</p>
<p>相关状态汇总：<br>
STOPPED：进程因为停止请求而停止，或从未启动过<br>
STARTING：过程因为启动请求，正在启动中<br>
RUNNING：进程正常运行中<br>
BACKOFF：进程进入了STARTING状态，但随后退出太快而无法转移到RUNNING状态。<br>
STOPPING：进程由于停止请求正在停止中<br>
EXITED：进程从RUNNING状态退出（可能正常，也可能异常）<br>
FATAL：进程无法成功启动<br>
UNKNOWN：未知状态（考虑supervisor出错）</p>
</li>
<li>
<p>开机自启设置<br>
<code> sudo vim /etc/systemd/system/supervisor.service</code><br>
粘贴如下进入文件保存：<br>
[Unit]<br>
<code>Description=Supervisor daemon</code></p>
<p>[Service]<br>
<code> User=root</code><br>
<code> Group=rm</code><br>
<code> Type=simple</code><br>
<code> ExecStart=/usr/bin/supervisord -c /etc/supervisord.conf</code><br>
<code>KillMode=process</code><br>
<code>Restart=on-failure</code><br>
<code> RestartSec=50s</code></p>
<p>[Install]<br>
<code> WantedBy=multi-user.target</code></p>
</li>
<li>
<p>更新服务文件<br>
<code>systemctl daemon-reload</code></p>
</li>
<li>
<p>开启服务<br>
<code>systemctl start supervisor.service</code></p>
</li>
</ol>
<p>10.设置服务开机自启<br>
<code>sudo systemctl enable supervisor.service</code></p>
<p>11.查看是否开机自启<br>
<code>sudo systemctl is-enabled supervisor.service</code></p>
]]></content>
    </entry>
</feed>